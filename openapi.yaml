openapi: 3.0.1
info:
  title: Metadata Standards Catalog
  description: "The RDA [Metadata Standards Catalog](https://rdamsc.dcc.ac.uk/) is a collaborative, open directory of metadata standards applicable to research data. It is offered to the international academic community to help address infrastructure challenges."
  termsOfService: https://rdamsc.dcc.ac.uk/terms-of-use
  version: 1.0.0
externalDocs:
  description: Browse the source code
  url: https://www.github.com/rd-alliance/metadata-catalog-dev
servers:
- url: https://rdamsc.dcc.ac.uk
tags:
- name: query
  description: Search the catalog
- name: api
  description: Read and edit the catalog
- name: m
  description: Metadata schemes
- name: g
  description: Organizations (groups)
- name: t
  description: Tools
- name: c
  description: Mappings (crosswalks)
- name: e
  description: Endorsements
- name: user
  description: Manage your API account
paths:
  /query/schemes:
    post:
      tags:
      - query
      - m
      summary: "Search for metadata schemes"
      requestBody:
        description: "You must provide one or more parameters. Parameters are combined with Boolean OR."
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: "Python-compatible [regular expression](https://docs.python.org/3/library/re.html), for searching within titles."
                keyword:
                  type: string
                  description: "Pipe-separated list of keywords to search for, e.g. Astronomy|Biology. Returns schemes tagged with at least one of the exact given keywords or one of their narrower or broader terms."
                keyword_id:
                  type: string
                  description: "Pipe separated list of URIs from the UNESCO Vocabulary. Returns schemes tagged with at least one of the exact given keywords or one of their narrower or broader terms. (You may notice a difference in behaviour from `keyword` since it skips an initial translation step.)"
                identifier:
                  type: string
                  description: "Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:m`."
                funder:
                  type: string
                  description: "Python-compatible [regular expression](https://docs.python.org/3/library/re.html), to search for within names of organizations listed as funders of the scheme."
                funder_id:
                  type: string
                  description: "Single, exact identifier to search for within the IDs of organizations listed as funders of the scheme."
                dataType:
                  type: string
                  description: "Single, exact data type label or URI to search for within the list of data types."
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
  /query/organizations:
    post:
      tags:
      - query
      - g
      summary: "Search for organizations"
      requestBody:
        description: "You must provide one or more parameters. Parameters are combined with Boolean OR."
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Python-compatible [regular expression](https://docs.python.org/3/library/re.html), for searching within organization names."
                identifier:
                  type: string
                  description: "Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:g`."
                type:
                  type: string
                  description: "Type of organization to search for: standards body, archive, professional group, coordination group."
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
  /query/tools:
    post:
      tags:
      - query
      - t
      summary: "Search for tools"
      requestBody:
        description: "You must provide one or more parameters. Parameters are combined with Boolean OR."
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: "Python-compatible [regular expression](https://docs.python.org/3/library/re.html), for searching within titles."
                identifier:
                  type: string
                  description: "Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:t`."
                type:
                  type: string
                  description: "Type of tool to search for: terminal(⟨platform⟩), graphical(⟨platform⟩), web service, web application."
                supported_scheme:
                  type: string
                  description: "Internal metadata scheme identifier to search for among the schemes supported by the tool: msc:m⟨number⟩."
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
  /query/mappings:
    post:
      tags:
      - query
      - c
      summary: "Search for metadata mappings"
      requestBody:
        description: "You must provide one or more parameters. `input_scheme` and `output_scheme` are combined with Boolean AND if both are given, while `identifier` combines with the others with Boolean OR."
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: "Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:c`."
                input_scheme:
                  type: string
                  description: "Internal metadata scheme identifier to search for among the schemes that can be used as input by the mapping: msc:m⟨number⟩."
                output_scheme:
                  type: string
                  description: "Internal metadata scheme identifier to search for among the schemes that can be constructed as output by the mapping: msc:m⟨number⟩."
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
  /query/endorsements:
    post:
      tags:
      - query
      - e
      summary: "Search for endorsements"
      requestBody:
        description: "You must provide one or more parameters. Parameters are combined with Boolean OR."
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: "Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:e`."
                endorsed_scheme:
                  type: string
                  description: "Internal metadata scheme identifier to search for among the schemes endorsed by the endorsement: msc:m⟨number⟩."
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
  /api/m:
    get:
      tags:
      - api
      - m
      summary: "List all metadata schemes"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata-schemes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemResponse'
  /api/g:
    get:
      tags:
      - api
      - g
      summary: "List all organizations"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemResponse'
  /api/t:
    get:
      tags:
      - api
      - t
      summary: "List all tools"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemResponse'
  /api/c:
    get:
      tags:
      - api
      - c
      summary: "List all mappings"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  mappings:
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemResponse'
  /api/e:
    get:
      tags:
      - api
      - e
      summary: "List all endorsements"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  endorsements:
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemResponse'
  /api/reset-password:
    post:
      tags:
      - api
      - user
      summary: "Change API user password"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                  description: "New password to use for subsequent calls."
              required:
              - new_password
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: "Confirmation of the username for which the password was reset."
                  password_reset:
                    type: boolean
                    description: "True if the reset was successful."
        401:
          description: "Unauthorized access"
          content: {}
        500:
          description: "Internal Server Error: password could not be reset"
          content: {}
      security:
      - api_user: []
  /api/token:
    get:
      tags:
      - api
      - user
      summary: "Request an authorization token"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: "Authorization token valid for 600 seconds."
        401:
          description: "Unauthorized access"
          content: {}
      security:
      - api_user: []
components:
  schemas:
    ItemResponse:
      type: object
      properties:
        id:
          type: integer
          description: "Numeric portion of the MSC ID."
        slug:
          type: string
          description: "A less opaque identifying string for the record, derived from the title of a metadata scheme, the name of an organization, etc."
    QueryResponse:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            description: "Full MSC ID."
            pattern: '^msc:(m|g|t|c|e)\d+$'
  securitySchemes:
    api_user:
      type: http
      description: "If using an API token, use this as the username and any arbitrary string as the password."
      scheme: Basic
